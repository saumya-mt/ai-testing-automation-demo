name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run AI Code Review
      id: ai-review
      run: |
        python3 ai-scripts/code_reviewer.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate AI Tests
      id: ai-tests
      run: |
        python3 ai-scripts/test_generator.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Comment PR
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const reviewContent = fs.readFileSync('reports/code_review_report.md', 'utf8');
          
          let comment = '## ðŸ¤– AI Code Review Report\n\n';
          comment += reviewContent;
          
          comment += '\n\n## ðŸ§ª Generated Test Files\n\n';
          const testFiles = fs.readdirSync('tests/auto_generated_tests');
          testFiles.forEach(file => {
            if (file.endsWith('.test.jsx')) {
              comment += `- âœ… ${file}\n`;
            }
          });
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          }); 